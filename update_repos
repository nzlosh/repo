#!/bin/bash
set +x

# TO DO : Package scan needs to be run on the VM while signing happens outside.
function scan_packages
{
	pushd . >/dev/null
	DISTRO="$(basename $1)"
	# Move up two directories so Packages output contains the correct path
	# for the multiple repositories structure hosted in github pages.
	cd "$1/../.."
	dpkg-scanpackages --multiversion -a amd64 dists/$DISTRO/pool > "dists/${DISTRO}/main/binary-amd64/Packages"
	popd > /dev/null
}

function check_requirements
{
	for i in /usr/bin/sha256sum /usr/bin/dpkg-scanpackages
	do
		test -x $i || echo Missing $i
	done
}

function create_release
{
	pushd . >/dev/null

	DIST_PATH="$1"
	CODENAME="$(basename $1)"
	local SHA=

	cd "$DIST_PATH"
	FILENAME="main/binary-amd64/Packages"
	if [[ -e "$FILENAME" ]]; then
		S=$(stat "$FILENAME" --printf %s)
		SHA=$( sha256sum "$FILENAME" | awk "{print \"SHA256: \"\$1\" $S \"\$2}" )
		cat <<EOF > Release
Date: $(date -Ru)
Archive: stable
Codename: $CODENAME
Component: main
Origin: github.com/nzlosh
Label: nzlosh Personal Packages Archive
Architecture: amd64
$SHA
EOF
		for i in Release
		do
			gpg --default-key "nzlosh@yahoo.com" -abs -o ${i}.gpg $i
			gpg --default-key "nzlosh@yahoo.com" --clearsign -o $(dirname $i)/InRelease $i
		done
	else
		echo "Can not find $FILENAME in $DIST_PATH"
	fi

	popd >/dev/null
}

function fetch_packages_from_vm
{
	PKG_PATH="err-stackstorm/contrib/packaging/pkg-build"
	declare DEB=(
		deb11
		debian/dists/bullseye/pool
		deb12
		debian/dists/bookworm/pool
		u2004
		ubuntu/dists/focal/pool
		u2204
		ubuntu/dists/jammy/pool
		u2404
		ubuntu/dists/noble/pool
	)
	for i in $(seq 0 2 ${#DEB[@]})
	do
		DISTRO="${DEB[$i]}"
		REPO_PATH="${DEB[$(($i + 1))]}"
		if [[ -n "$DISTRO" && -n "$REPO_PATH" ]]; then
			echo $DISTRO $REPO_PATH
			scp "${DISTRO}:${PKG_PATH}/err-stackstorm_*_amd64.deb" "./$REPO_PATH"
		fi
	done

	declare RPM=(
		rocky8
		redhat/rhel/8/x86_64
		rocky9
		redhat/rhel/9/x86_64
	)
	for i in $(seq 0 2 ${#RPM[@]})
	do
		DISTRO="${RPM[$i]}"
		REPO_PATH="${RPM[$(($i + 1))]}"
		if [[ -n "$DISTRO" && -n "$REPO_PATH" ]]; then
			echo $DISTRO $REPO_PATH
			scp "${DISTRO}:${PKG_PATH}/tmp*/rpmbuild/RPMS/x86_64/err-stackstorm-*.x86_64.rpm" "./$REPO_PATH"
		fi
	done
}


case "$1" in
    fetch)
		fetch_packages_from_vm
		;;
	scan)
		for i in ubuntu/dists/* debian/dists/*;
		do
			scan_packages $i
		done
		;;
	sign)
		for i in ubuntu/dists/* debian/dists/*;
		do
			create_release $i
			echo
		done
		;;
	*)
		cat <<EOF
Usage $0 <scan|sign>
  scan: run from inside VM to scan for new packages.
  fetch: fetches packages from VMs and copies them to repo directory on local host.
  sign: run from outside VM to sign package indices.
EOF
		;;
esac
